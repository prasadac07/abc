@Override
@UseOpenShiftClient
public InventoryResponse getInventoryForCluster(@ClusterIdentifier String cluster, String namespace) {
    OpenShiftClient client = openshiftService.getActiveClient();

    if (client == null) {
        throw new RuntimeException("OpenShift client is null");
    }

    Project project = client.projects().withName(namespace).get();

    if (project == null || project.getStatus() == null) {
        // Project not found â€” return empty/default
        return emptyInventoryResponse("Not Found");
    }

    String projectStatus = project.getStatus().getPhase();
    Map<String, Integer> counts = fetchResourceCounts(client, namespace);

    InventoryResponse response = new InventoryResponse();
    response.setStatus(projectStatus);
    response.setPods(counts.getOrDefault("pods", 0));
    response.setServices(counts.getOrDefault("services", 0));
    response.setRoutes(counts.getOrDefault("routes", 0));
    response.setDeployments(counts.getOrDefault("deployments", 0));
    response.setReplicasets(counts.getOrDefault("replicasets", 0));
    response.setStatefulSets(counts.getOrDefault("statefulsets", 0));
    response.setJobs(counts.getOrDefault("jobs", 0));
    response.setCronJobs(counts.getOrDefault("cronjobs", 0));
    response.setIngresses(counts.getOrDefault("ingresses", 0));
    response.setPersistentvolumeClaims(counts.getOrDefault("persistentVolumeClaims", 0));
    response.setConfigmaps(counts.getOrDefault("configmaps", 0));

    return response;
}
